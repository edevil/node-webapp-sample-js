steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker pull eu.gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME/\//_}_base || true']
  entrypoint: '/bin/bash'
  env:
    - 'BRANCH_NAME=${BRANCH_NAME}'
  id: 'docker-pull'
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker build --target base --cache-from eu.gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME/\//_}_base -t eu.gcr.io/${PROJECT_ID}/${REPO_NAME}:${BRANCH_NAME/\//_}_base .']
  entrypoint: '/bin/bash'
  env:
    - 'BRANCH_NAME=${BRANCH_NAME}'
  waitFor: ['docker-pull']
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '-d', '--name=databasetest', '-e', 'POSTGRES_DB=sample_db_citest', 'postgres']
  waitFor: ['docker-pull']
- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '-d', '--name=redistest', 'redis']
  waitFor: ['docker-pull']
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker run --name buildcont -e REDIS_HOST=redistest -e DB_HOST=databasetest --link=databasetest --link=redistest -t eu.gcr.io/${PROJECT_ID}/${REPO_NAME}:${BRANCH_NAME/\//_}_base sh -c "npm run pretty && npm run lint && npm test"']
  entrypoint: '/bin/bash'
  env:
    - 'BRANCH_NAME=${BRANCH_NAME}'
  id: 'run-tests'
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker push eu.gcr.io/${PROJECT_ID}/${REPO_NAME}:${BRANCH_NAME/\//_}_base']
  entrypoint: '/bin/bash'
  env:
    - 'BRANCH_NAME=${BRANCH_NAME}'
  waitFor: ['run-tests']
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker pull eu.gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME/\//_}_latest || true']
  entrypoint: '/bin/bash'
  env:
  - 'BRANCH_NAME=${BRANCH_NAME}'
  waitFor: ['run-tests']
  id: 'pull-latest'
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker build --cache-from eu.gcr.io/${PROJECT_ID}/${REPO_NAME}:${BRANCH_NAME/\//_}_base --cache-from eu.gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME/\//_}_latest -t eu.gcr.io/${PROJECT_ID}/${REPO_NAME}:${BRANCH_NAME/\//_}_${COMMIT_SHA} .']
  entrypoint: '/bin/bash'
  env:
  - 'BRANCH_NAME=${BRANCH_NAME}'
  waitFor: ['pull-latest']
  id: 'build-latest'
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker tag eu.gcr.io/${PROJECT_ID}/${REPO_NAME}:${BRANCH_NAME/\//_}_${COMMIT_SHA} eu.gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME/\//_}_latest']
  entrypoint: '/bin/bash'
  env:
  - 'BRANCH_NAME=${BRANCH_NAME}'
  waitFor: ['build-latest']
  id: 'tag-latest'
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker push eu.gcr.io/${PROJECT_ID}/${REPO_NAME}:${BRANCH_NAME/\//_}_${COMMIT_SHA}']
  entrypoint: '/bin/bash'
  env:
  - 'BRANCH_NAME=${BRANCH_NAME}'
  waitFor: ['build-latest']
- name: 'gcr.io/cloud-builders/docker'
  args: ['-c', 'docker push eu.gcr.io/${PROJECT_ID}/${REPO_NAME}:${BRANCH_NAME/\//_}_latest']
  entrypoint: '/bin/bash'
  env:
  - 'BRANCH_NAME=${BRANCH_NAME}'
  waitFor: ['tag-latest']
- name: 'gcr.io/labs-198515/helm'
  args: ['-c', '/builder/helm.bash upgrade noder --namespace noder-develop noder --timeout 60 --set image.tag=${BRANCH_NAME/\//_}_${COMMIT_SHA}']
  entrypoint: '/bin/bash'
  env:
  - 'BRANCH_NAME=${BRANCH_NAME}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=brpx-labs-gke'
  - 'CLOUDSDK_COMPUTE_ZONE=europe-west1-b'

timeout: 600s
